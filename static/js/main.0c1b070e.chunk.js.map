{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"0NA8DeA,EAzDI,SAACC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACOC,EAAgBJ,EAAhBI,OAAOC,EAASL,EAATK,MAERC,EAAe,SAACC,GAClBA,EAAMC,iBAEN,IAAMC,EAAMP,EAAMQ,OAEfD,EAAKE,OAAQ,GAAGC,YAAYP,EAAOD,EAAO,CAAEK,SAE/CN,EAAS,KAgBb,OACE,uBAAMU,UAAU,eAAeC,SAAUR,EAAzC,UACF,uBACAO,UAAU,gBACNE,YAAY,oBACZb,MAAOA,EACPc,SAlBgB,SAACT,GACjBJ,EAASI,EAAMU,OAAOf,OAEtBgB,YAASlB,EAAMI,IAgBfU,SAAUR,IAEd,uBAAOa,QAAQ,gBAAf,SACJ,sBAAMN,UAAU,eAAhB,SACA,cAACO,EAAA,EAAD,CAAiBP,UAAU,qBAI3B,uBACAQ,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHC,MAAO,CAACC,QAAQ,QAChBT,SAzBwB,SAACT,GACjBK,YAAYP,EAAMD,EAAO,CAACsB,MAAOnB,EAAMU,OAAOS,MAAOjB,KAAM,QA2BnE,wBAAQY,KAAK,SAASR,UAAU,cAAhC,SACI,cAACc,EAAA,EAAD,CAAcd,UAAU,oBCnCbe,EArBE,SAAC,GAAa,IAAD,EAAXC,EAAW,EAAXA,QAEnB,OAAU,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBnB,QAAQ,EAEzB,qBACAoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,sBACJpB,UAAU,gBACVW,MAAO,CAACU,MAAM,WAOd,qBAAKrB,UAAU,UAAUW,MAAO,CAACU,MAAM,QAAQC,YAAY,OAAOC,MAAM,QAAQC,gBAAgB,WAAhG,SACKR,EAAQpB,QCoBN6B,EApCM,SAAC,GAA4B,IAAD,IAA1BC,EAA0B,EAA1BA,YAAaV,EAAa,EAAbA,QAC5BW,GACHD,GAAeA,EAAYE,OAAOC,WAAab,EAAQY,OAAOC,SAE/D,OACA,sBAAK7B,UAAU,cAAf,UACG2B,GACC,qBACE3B,UAAU,iBACVW,MAAO,CAAEmB,gBAAgB,OAAD,cAASd,QAAT,IAASA,GAAT,UAASA,EAASY,cAAlB,aAAS,EAAiBG,OAA1B,SAIpB,OAAPf,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBnB,QAAS,EAC9B,qBACEoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,sBACJpB,UAAU,gBACVW,MAAO,CAAEqB,WAAYL,EAAuB,MAAO,UAGrD,qBACE3B,UAAU,UACVW,MAAO,CACLU,MAAO,OAEPG,gBAAiB,UAAWQ,WAAYL,EAAuB,MAAO,QAL1E,SAQGX,EAAQpB,WCiDJqC,EAzEC,SAAC9C,GACb,IAAO+C,EAAuC/C,EAAvC+C,MAAOC,EAAgChD,EAAhCgD,WAAYC,EAAoBjD,EAApBiD,SAAUC,EAAUlD,EAAVkD,SAE9BC,EAAMJ,GAASA,EAAMC,GAErBI,EAAoB,SAACvB,EAASwB,GAClC,OAAQF,EAAKG,OAAOC,KAAI,SAACC,EAAQC,GAAT,aAAmBD,EAAOE,YAAc7B,EAAQN,IAClE,qBAEAV,UAAU,eACVW,MAAO,CACHU,MAAOmB,EAAc,QAAU,OAC/BV,gBAAgB,OAAD,cAASa,QAAT,IAASA,GAAT,UAASA,EAAQA,cAAjB,aAAS,EAAgBZ,OAAzB,OALnB,eACca,QAYhBE,EAAgB,WAClB,IAAMC,EAAMC,OAAOD,KAAKV,GAExB,OAAOU,EAAKL,KAAI,SAACO,EAAIL,GACjB,IAAM5B,EAASqB,EAASY,GAClBC,EAA2B,IAAVN,EAAa,KAAMG,EAAKH,EAAM,GAC/CJ,EAAcJ,IAAapB,EAAQY,OAAOC,SAEhD,OAEI,sBAA2BlB,MAAO,CAACwC,MAAM,QAAzC,UACI,qBAAKnD,UAAU,gBAAf,SAEIwC,EACA,cAAC,EAAD,CAAWxB,QAASA,IACnB,cAAC,EAAD,CAAcA,QAASA,EAASU,YAAaW,EAASa,OAOhE,qBAAKlD,UAAU,gBAAgBW,MAAO,CAACW,YAAYkB,EAAc,OAAO,MAAOR,WAAYQ,EAAY,MAAQ,QAA/G,SAEMD,EAAmBvB,EAAQwB,OAdhC,cAAkBI,QAuBtB,OADAE,IACIR,EAGT,sBAAKtC,UAAU,YAAf,UACI,sBAAKA,UAAU,uBAAf,UACC,sBAAKA,UAAU,aAAf,iBAA6BsC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMc,MAAnC,OACA,qBAAKpD,UAAU,gBAAf,SACCsC,EAAKG,OAAOC,KAAI,SAACC,GAAD,gBAAeA,EAAOA,OAAOd,kBAG9CiB,IACD,qBAAKnC,MAAO,CAAC0C,OAAO,WACpB,qBAAKrD,UAAU,yBAAf,SACK,cAAC,EAAD,2BAAiBb,GAAjB,IAAwBI,OAAQ4C,UAbnB,c,iDCQdmB,EA/DG,WAChB,MAAgClE,mBAAS,IAAzC,mBAAOyC,EAAP,KAAiB0B,EAAjB,KACA,EAAgCnE,mBAAS,IAAzC,mBAAOoE,EAAP,KAAiBC,EAAjB,KACA,EAA0BrE,mBAAS,IAAnC,mBAAOsE,EAAP,KAAcC,EAAd,KAEMlE,EAAY,uCAAG,WAAOmE,GAAP,eAAAC,EAAA,6DACnBD,EAAEjE,iBAEImE,EAAa,CACjB,aAAc,uCACd,YAAajC,EACb,cAAe2B,GANE,kBAWXO,IAAMC,IAAI,kCAAmC,CAAEC,QAASH,IAX7C,OAajBI,aAAaC,QAAQ,WAAYtC,GACjCqC,aAAaC,QAAQ,WAAYX,GAEjCY,OAAOC,SAASC,SAhBC,kDAkBjBX,EAAS,6BAlBQ,0DAAH,sDAuBlB,OACE,qBAAK3D,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,+BAEA,uBAAMC,SAAUR,EAAhB,UACE,uBACEe,KAAK,OACLnB,MAAOwC,EACP1B,SAAU,SAACyD,GAAD,OAAOL,EAAYK,EAAExD,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZqE,UAAQ,IAGV,uBACE/D,KAAK,WACLnB,MAAOmE,EACPrD,SAAU,SAACyD,GAAD,OAAOH,EAAYG,EAAExD,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZqE,UAAQ,IAEV,qBAAKC,MAAM,SAAX,SACE,wBAAQhE,KAAK,SAASR,UAAU,SAAhC,SACE,sDAGJ,oBAAIA,UAAU,QAAd,SAAuB0D,aCxClBe,EAfH,WACZ,OAAKP,aAAaQ,QAAQ,YAGlB,cAAC,IAAD,CACIrB,OAAO,QACPsB,UAAU,uCACVvC,SAAU8B,aAAaQ,QAAQ,YAC/BE,WAAYV,aAAaQ,QAAQ,YACjCG,eAAgB,SAACC,GAAD,OAAgB,cAAC,EAAD,eAAcA,OARb,cAAC,EAAD,KCE7CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0c1b070e.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport {sendMessage, isTyping} from 'react-chat-engine';\r\nimport { SendOutlined ,PictureOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst MessageForm =(props)=>{\r\n    const [value, setValue] = useState('');\r\n    const {chatId,creds} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text =value.trim();\r\n\r\n        if(text.length >0) sendMessage(creds, chatId,{ text});\r\n\r\n        setValue('');\r\n\r\n    }\r\n\r\n    const handleChange =(event) =>{\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props,chatId);\r\n    }\r\n\r\n\r\n    const handleUpload =(event) =>{\r\n        sendMessage(creds,chatId,{files: event.target.files, text :''} )\r\n    } \r\n\r\n\r\n    return(\r\n      <form className=\"message-form\" onSubmit={handleSubmit}>\r\n    <input \r\n    className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n    />\r\n    <label htmlFor=\"upload-button\">\r\n<span className=\"image-button\">\r\n<PictureOutlined className=\"picture-icon\" />\r\n</span>\r\n\r\n    </label>\r\n<input \r\ntype=\"file\"\r\nmultiple={false}\r\nid=\"upload-button\"\r\nstyle={{display:'none'}}\r\nonChange={handleUpload}\r\n/>\r\n\r\n<button type=\"submit\" className=\"send-button\">\r\n    <SendOutlined className=\"send-icon\" />\r\n</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default MessageForm;","const MyMessage =({message})=>{\r\n\r\nif(message?.attachments?.length >0){\r\n    return(\r\n        <img \r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachments\"\r\n        className=\"message-image\"\r\n        style={{float:'right'}}\r\n        />\r\n    )\r\n\r\n\r\n}\r\n    return(\r\n        <div className=\"message\" style={{float:'right',marginRight:'18px',color:'white',backgroundColor:'#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  \r\n    return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachments\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? '4px': '48px' }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n        \r\n            backgroundColor: \"#CABCDC\", marginLeft: isFirstMessageByUser ? '4px': '48px'\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\n\r\nconst ChatFeed =(props) =>{\r\n    const {chats, activeChat ,userName, messages}=props;\r\n\r\n    const chat =chats && chats[activeChat];\r\n\r\n    const renderReadReceipts =(message, isMyMessage)=>{\r\n      return  chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div\r\n            key ={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n                float: isMyMessage ? 'right' : 'left',\r\n                backgroundImage: `url(${person?.person?.avatar})`\r\n            }}\r\n\r\n\r\n            />\r\n        ))\r\n\r\n    } \r\n    const renderMessages =()=>{\r\n        const keys =Object.keys(messages)\r\n        \r\n        return keys.map((key,index)=>{\r\n            const message =messages[key];\r\n            const lastMessageKey = index === 0 ?null :keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n\r\n                <div key ={`msg_${index}`} style={{width:'100%'}} >\r\n                    <div className=\"message-block\">\r\n                    {\r\n                        isMyMessage?\r\n                        <MyMessage message={message} />\r\n                        :<TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                    }\r\n                     </div>\r\n              \r\n               \r\n               \r\n               \r\n               <div className=\"read-receipts\" style={{marginRight:isMyMessage ? '18px':'0px', marginLeft: isMyMessage?'0px' : '68px'}}>\r\n               \r\n                    {renderReadReceipts(message,isMyMessage)}\r\n               \r\n                </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n            renderMessages()\r\n            if(!chat) return 'Loading...'\r\n\r\n        return(\r\n       <div className=\"chat-feed\">\r\n           <div className=\"chat-title-container\">\r\n            <div className=\"chat-title\">{chat?.title} </div>\r\n            <div className=\"chat-subtitle\"> \r\n            {chat.people.map((person) => `${person.person.username}`)}\r\n            </div>\r\n           </div>\r\n           {renderMessages()}\r\n           <div style={{height:'100px'}} />\r\n           <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat}/>\r\n           </div>\r\n       </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChatFeed;","import axios from 'axios';\r\nimport { useState } from \"react\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": \"f70b132a-6234-4ee2-aed0-51cb7d6ff5b8\",\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password\r\n    };\r\n\r\n    try {\r\n      //username |password => chatengine -> give messages\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n      // works out -> logged in\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      setError(\"Oops, Invalid Credentials\");\r\n      //error -> try with new username ...\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\"> Chat Application</h1>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start Chatting</span>\r\n            </button>\r\n          </div>\r\n          <h2 className=\"error\">{error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import {ChatEngine} from 'react-chat-engine';\r\nimport ChatFeed from \"./components/ChatFeed\";\r\nimport './App.css';\r\nimport LoginForm from './components/LoginForm';\r\nconst App = ()=>{\r\nif (!localStorage.getItem('username')) return<LoginForm />\r\n    \r\n    return(\r\n        <ChatEngine \r\n            height=\"100vh\"\r\n            projectID=\"f70b132a-6234-4ee2-aed0-51cb7d6ff5b8\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps)=><ChatFeed {...chatAppProps}/>}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}